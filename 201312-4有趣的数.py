'''动态规划'''
'''
1. 它的数字只包含0, 1, 2, 3，且这四个数字都出现过至少一次。
2. 所有的0都出现在所有的1之前，而所有的2都出现在所有的3之前。
3. 最高位数字不为0。

最高位为2，次位为0或3或2
0 - 1
2 - 3

# 六种状态：仅包含以下数字，且符合以上规则
    - 0.    2
    - 1.    2,0
    - 2.    2,3
    - 3.    2,0,1
    - 4.    2,0,3
    - 5.    2,0,3,1
dp[i][j]数组
i 表示 数字位数
j 表示 哪种状态
状态方程：
    dp[i+1][0] = 1
    dp[i+1][1] = dp[i][0] + dp[i][1]*2
    dp[i+1][2] = dp[i][0] + dp[i][2]
    dp[i+1][3] = dp[i][1] + dp[i][3]*2
    dp[i+1][4] = dp[i][1] + dp[i][2] + dp[i][4]*2
    dp[i+1][5] = dp[i][3] + dp[i][4] + dp[i][5]*2
'''
n = int(input())

dp = [[0]*6 for _ in range(n+1)]
mod = 1000000007
#print(dp)
for i in range(n):
    dp[i + 1][0] = 1
    dp[i + 1][1] = (dp[i][0] + dp[i][1] * 2)%mod
    dp[i + 1][2] = (dp[i][0] + dp[i][2])%mod
    dp[i + 1][3] = (dp[i][1] + dp[i][3] * 2)%mod
    dp[i + 1][4] = (dp[i][1] + dp[i][2] + dp[i][4] * 2)%mod
    dp[i + 1][5] = (dp[i][3] + dp[i][4] + dp[i][5] * 2)%mod
print(dp[n][5])
